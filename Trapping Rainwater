class Solution {
    public int trap(int[] height) {
        int maxL=0;
        int maxR=0,sum=0;
        int left[]=new int[height.length];
        int right[]=new int[height.length];
         int n=height.length;
        for(int i=0;i<height.length;i++)
        {
               left[i]=Math.max(maxL,height[i]);
               maxL=Math.max(maxL,height[i]);

               right[n-i-1]=Math.max(maxR,height[n-i-1]);
               maxR=Math.max(maxR,height[n-i-1]);
        }
        for(int i=0;i<height.length;i++)
        {
              sum+=Math.min(left[i],right[i])-height[i];
        }
        return sum;
    }
}
