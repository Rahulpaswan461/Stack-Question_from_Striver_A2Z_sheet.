class Solution {
    public int laregstRectangle(int arr[])
    {
          int ans[]=new int[arr.length];
          Stack<Integer>st=new Stack<>();
          int max=Integer.MIN_VALUE;
          int width=0,currentVariable=0;
          for(int i=0;i<=arr.length;i++)
          {
                  while(!st.isEmpty() && (i==arr.length || arr[st.peek()]>=arr[i]))
                  {
                         currentVariable=arr[st.pop()];

                         if(st.isEmpty())
                         {
                             width=i;
                         }
                         else{
                              width=i-st.peek()-1;
                         }
                         max=Math.max(max,width*currentVariable);
                  }
                  st.push(i);
          }
          return max;
    }
    public int maximalRectangle(char[][] matrix) {
        int n=matrix.length;
        int ans[]=new int[matrix[0].length];
        int max=0,findMax=0;
        for(int i=0;i<matrix.length;i++)
        {
              for(int j=0;j<matrix[i].length;j++)
              {
                     if((matrix[i][j]-'0') ==0)
                     {
                         ans[j]=0;
                     }
                     else{
                         ans[j]++;
                     }
              }
            findMax=laregstRectangle(ans);

            max=Math.max(max,findMax);
        }
        return max;
    }
}
